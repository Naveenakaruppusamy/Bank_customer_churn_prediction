# -*- coding: utf-8 -*-
"""Bank Customer Churn Prediction.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/14iesZjetPPLBpX1oIr96zF7TqXkaHQKq
"""

import pandas as pd

data=pd.read_csv('Churn_Modelling.csv')

data.head()

data.tail()

data.shape

data.info()

data.isnull()

data.isnull().sum()

data.describe()

data.describe(include='all')

data.columns

data=data.drop(['RowNumber', 'CustomerId', 'Surname',],axis=1)

data.head()

data['Geography'].unique()

data=pd.get_dummies(data,drop_first=True)

data.head()

data['Exited'].value_counts()

X=data.drop('Exited',axis=1)
y=data['Exited']

y

from imblearn.over_sampling import SMOTE   #Synthetic Minority Oversampling Technique

X_res,y_res=SMOTE().fit_resample(X,y)

y_res.value_counts()

"""training and testing set

Splitting into train and test set
"""

from sklearn.model_selection import train_test_split

X_train,X_test,y_train,y_test=train_test_split(X_res,y_res,test_size=0.20,random_state=42)

"""Feature scaling"""

from sklearn.preprocessing import StandardScaler

sc=StandardScaler( )

#sc.fit_transform(X_train)
X_train=sc.fit_transform(X_train)
X_test=sc.transform(X_test)

X_train

"""Random forest"""

from sklearn.ensemble import RandomForestClassifier

rf=RandomForestClassifier()

rf.fit(X_train,y_train)

y_pred=rf.predict(X_test)

from sklearn.metrics import precision_score,accuracy_score

accuracy_score(y_test,y_pred5)

precision_score(y_test,y_pred5)

import joblib

joblib.dump(rf,'churn_predict_model')

model=joblib.load('churn_predict_model')

data.columns



model.predict([[619,42,2,0.0,0,0,0,101348.88,0,0,0]])

model.predict([[619,42,2,0.0,1,0,11234.67,1,0,0,0]])